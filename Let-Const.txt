Q: What is the difference between var and let?
A: variables declared with var can be redeclared, reassigned, have function scope,
   and can be hoisted. With let, variables can be reassigned as well, but cant be
   redeclared or hoisted. They also only have block scope.

Q: What is the difference betweem var and const?
A: var variables can be reassigned and redeclared, while const variables cannot.
   Also, var variables have function scope and can be hoisted, const cannot and
   have block scope like let.

Q: What is the difference between let and const?
A: While let and const both have block scope and cant be redeclared, const cannot
   be reassigned.

Q: What is hoisting?
A: Hoisting is a property of var variables that are "hoisted" or raised to the top
   of the scope they are declared in when recognized by the compiler. It can be accessed
   prior to assignment in which it will return undefined until it is assigned a value later.
   Let and const cannot be hoisted and will return a reference error if attempting to access
   before assignment.

   ------------------------------
   ES5 Global Constants EX:
   ------------------------------
   var PI = 3.14;
   PI = 42; // stop me from doing this!

   ------------------------------
   ES2015 Global Constants EX:
   ------------------------------
   /* Write an ES2015 Version */
   let PI = 3.14;
   PI = 3.14; //Will work, to stop this, use const instead of PI

   const PI = 3.14;
   PI = 42; //Will not work
